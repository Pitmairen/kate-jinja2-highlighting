
import re
import os.path


name_re = re.compile(r'<language name=".*?"')
find_jinja_re = re.compile(r'</contexts>')
context_re = re.compile(r'(<context .*?>)')
find_jinja = '''\
<context name="FindJinja">
    <Detect2Chars context="##Jinja2" char="{" char1="{" lookAhead="true" />
    <Detect2Chars context="##Jinja2" char="{" char1="%" lookAhead="true" />
    <Detect2Chars context="##Jinja2" char="#" char1="#" lookAhead="true" />
    <Detect2Chars context="##Jinja2" char="{" char1="#" lookAhead="true" />
    <DetectChar char="%" firstNonSpace="true" context="##Jinja2" lookAhead="true" />
</context>'''


def add_jinja_syntax(filename, syntax_name):

    content = open(filename).read()

    content = name_re.sub(
        r'<!-- Autogenerated from %s -->\n<language name="%s"' % (
            os.path.basename(filename), syntax_name), content)

    content = context_re.sub(r'\1\n<IncludeRules context="FindJinja" />', content)

    content = find_jinja_re.sub(find_jinja + '\n</contexts>', content)


    return content

def add_jinja_syntax_html(filename, syntax_name):

    content = add_jinja_syntax(filename, syntax_name)

    content = content.replace('##CSS', '##Jinja2/CSS')
    content = content.replace('##JavaScript', '##Jinja2/JavaScript')

    return content


def write_file(filename, content):

    f = open(filename, 'w')
    f.write(content)
    f.close()



if __name__ == '__main__':

    import sys

    try:
        source_dir = sys.argv[1]
    except IndexError:
        source_dir = '/usr/share/apps/katepart/syntax/'

    sources = [
        ('javascript-jinja2.xml', 'javascript.xml', 'Jinja2/JavaScript', add_jinja_syntax),
        ('css-jinja2.xml', 'css.xml', 'Jinja2/CSS', add_jinja_syntax),
        ('html-jinja2.xml', 'html.xml', 'Jinja2/HTML', add_jinja_syntax_html)
    ]

    for dest_file, source_file, syntax_name, converter in sources:

        source_file = os.path.join(source_dir, source_file)

        write_file(dest_file, converter(source_file, syntax_name))
